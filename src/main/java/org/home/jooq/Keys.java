/**
 * This class is generated by jOOQ
 */
package org.home.jooq;


import javax.annotation.Generated;

import org.home.jooq.tables.BadFilesPathList;
import org.home.jooq.tables.Book;
import org.home.jooq.tables.EmptyBook;
import org.home.jooq.tables.IgnoredPathList;
import org.home.jooq.tables.ScanBadFilesPathList;
import org.home.jooq.tables.ScanBook;
import org.home.jooq.tables.ScanEmptyBook;
import org.home.jooq.tables.ScanScannedPathList;
import org.home.jooq.tables.ScanUndefinedBook;
import org.home.jooq.tables.ScanUndefinedPathList;
import org.home.jooq.tables.ScannedPathList;
import org.home.jooq.tables.Scanresult;
import org.home.jooq.tables.Session;
import org.home.jooq.tables.SessionScan;
import org.home.jooq.tables.UndefinedBook;
import org.home.jooq.tables.records.BadFilesPathListRecord;
import org.home.jooq.tables.records.BookRecord;
import org.home.jooq.tables.records.EmptyBookRecord;
import org.home.jooq.tables.records.IgnoredPathListRecord;
import org.home.jooq.tables.records.ScanBadFilesPathListRecord;
import org.home.jooq.tables.records.ScanBookRecord;
import org.home.jooq.tables.records.ScanEmptyBookRecord;
import org.home.jooq.tables.records.ScanScannedPathListRecord;
import org.home.jooq.tables.records.ScanUndefinedBookRecord;
import org.home.jooq.tables.records.ScanUndefinedPathListRecord;
import org.home.jooq.tables.records.ScannedPathListRecord;
import org.home.jooq.tables.records.ScanresultRecord;
import org.home.jooq.tables.records.SessionRecord;
import org.home.jooq.tables.records.SessionScanRecord;
import org.home.jooq.tables.records.UndefinedBookRecord;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships between tables of the <code></code> 
 * schema
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

	// -------------------------------------------------------------------------
	// IDENTITY definitions
	// -------------------------------------------------------------------------

	public static final Identity<SessionRecord, Integer> IDENTITY_SESSION = Identities0.IDENTITY_SESSION;

	// -------------------------------------------------------------------------
	// UNIQUE and PRIMARY KEY definitions
	// -------------------------------------------------------------------------

	public static final UniqueKey<BadFilesPathListRecord> PK_BAD_FILES_PATH_LIST = UniqueKeys0.PK_BAD_FILES_PATH_LIST;
	public static final UniqueKey<BookRecord> PK_BOOK = UniqueKeys0.PK_BOOK;
	public static final UniqueKey<EmptyBookRecord> PK_EMPTY_BOOK = UniqueKeys0.PK_EMPTY_BOOK;
	public static final UniqueKey<ScanresultRecord> PK_SCANRESULT = UniqueKeys0.PK_SCANRESULT;
	public static final UniqueKey<ScannedPathListRecord> PK_SCANNED_PATH_LIST = UniqueKeys0.PK_SCANNED_PATH_LIST;
	public static final UniqueKey<SessionRecord> PK_SESSION = UniqueKeys0.PK_SESSION;
	public static final UniqueKey<UndefinedBookRecord> PK_UNDEFINED_BOOK = UniqueKeys0.PK_UNDEFINED_BOOK;
	public static final UniqueKey<IgnoredPathListRecord> PK_IGNORED_PATH_LIST = UniqueKeys0.PK_IGNORED_PATH_LIST;

	// -------------------------------------------------------------------------
	// FOREIGN KEY definitions
	// -------------------------------------------------------------------------

	public static final ForeignKey<ScanBadFilesPathListRecord, ScanresultRecord> FK_SCAN_BAD_FILES_PATH_LIST_SCANRESULT_1 = ForeignKeys0.FK_SCAN_BAD_FILES_PATH_LIST_SCANRESULT_1;
	public static final ForeignKey<ScanBadFilesPathListRecord, BadFilesPathListRecord> FK_SCAN_BAD_FILES_PATH_LIST_BAD_FILES_PATH_LIST_1 = ForeignKeys0.FK_SCAN_BAD_FILES_PATH_LIST_BAD_FILES_PATH_LIST_1;
	public static final ForeignKey<ScanBookRecord, ScanresultRecord> FK_SCAN_BOOK_SCANRESULT_1 = ForeignKeys0.FK_SCAN_BOOK_SCANRESULT_1;
	public static final ForeignKey<ScanBookRecord, BookRecord> FK_SCAN_BOOK_BOOK_1 = ForeignKeys0.FK_SCAN_BOOK_BOOK_1;
	public static final ForeignKey<ScanEmptyBookRecord, ScanresultRecord> FK_SCAN_EMPTY_BOOK_SCANRESULT_1 = ForeignKeys0.FK_SCAN_EMPTY_BOOK_SCANRESULT_1;
	public static final ForeignKey<ScanEmptyBookRecord, EmptyBookRecord> FK_SCAN_EMPTY_BOOK_EMPTY_BOOK_1 = ForeignKeys0.FK_SCAN_EMPTY_BOOK_EMPTY_BOOK_1;
	public static final ForeignKey<ScanScannedPathListRecord, ScanresultRecord> FK_SCAN_SCANNED_PATH_LIST_SCANRESULT_1 = ForeignKeys0.FK_SCAN_SCANNED_PATH_LIST_SCANRESULT_1;
	public static final ForeignKey<ScanScannedPathListRecord, ScannedPathListRecord> FK_SCAN_SCANNED_PATH_LIST_SCANNED_PATH_LIST_1 = ForeignKeys0.FK_SCAN_SCANNED_PATH_LIST_SCANNED_PATH_LIST_1;
	public static final ForeignKey<ScanUndefinedBookRecord, ScanresultRecord> FK_SCAN_UNDEFINED_BOOK_SCANRESULT_1 = ForeignKeys0.FK_SCAN_UNDEFINED_BOOK_SCANRESULT_1;
	public static final ForeignKey<ScanUndefinedBookRecord, UndefinedBookRecord> FK_SCAN_UNDEFINED_BOOK_UNDEFINED_BOOK_1 = ForeignKeys0.FK_SCAN_UNDEFINED_BOOK_UNDEFINED_BOOK_1;
	public static final ForeignKey<ScanUndefinedPathListRecord, ScanresultRecord> FK_SCAN_UNDEFINED_PATH_LIST_SCANRESULT_1 = ForeignKeys0.FK_SCAN_UNDEFINED_PATH_LIST_SCANRESULT_1;
	public static final ForeignKey<SessionScanRecord, SessionRecord> FK_SESSION_SCAN_SESSION_1 = ForeignKeys0.FK_SESSION_SCAN_SESSION_1;
	public static final ForeignKey<SessionScanRecord, ScanresultRecord> FK_SESSION_SCAN_SCANRESULT_1 = ForeignKeys0.FK_SESSION_SCAN_SCANRESULT_1;

	// -------------------------------------------------------------------------
	// [#1459] distribute members to avoid static initialisers > 64kb
	// -------------------------------------------------------------------------

	private static class Identities0 extends AbstractKeys {
		public static Identity<SessionRecord, Integer> IDENTITY_SESSION = createIdentity(Session.SESSION, Session.SESSION.RECORD_ID);
	}

	private static class UniqueKeys0 extends AbstractKeys {
		public static final UniqueKey<BadFilesPathListRecord> PK_BAD_FILES_PATH_LIST = createUniqueKey(BadFilesPathList.BAD_FILES_PATH_LIST, BadFilesPathList.BAD_FILES_PATH_LIST.ID);
		public static final UniqueKey<BookRecord> PK_BOOK = createUniqueKey(Book.BOOK, Book.BOOK.SCAN_ID);
		public static final UniqueKey<EmptyBookRecord> PK_EMPTY_BOOK = createUniqueKey(EmptyBook.EMPTY_BOOK, EmptyBook.EMPTY_BOOK.SCAN_ID);
		public static final UniqueKey<ScanresultRecord> PK_SCANRESULT = createUniqueKey(Scanresult.SCANRESULT, Scanresult.SCANRESULT.SCAN_ID);
		public static final UniqueKey<ScannedPathListRecord> PK_SCANNED_PATH_LIST = createUniqueKey(ScannedPathList.SCANNED_PATH_LIST, ScannedPathList.SCANNED_PATH_LIST.ID);
		public static final UniqueKey<SessionRecord> PK_SESSION = createUniqueKey(Session.SESSION, Session.SESSION.RECORD_ID);
		public static final UniqueKey<UndefinedBookRecord> PK_UNDEFINED_BOOK = createUniqueKey(UndefinedBook.UNDEFINED_BOOK, UndefinedBook.UNDEFINED_BOOK.SCAN_ID);
		public static final UniqueKey<IgnoredPathListRecord> PK_IGNORED_PATH_LIST = createUniqueKey(IgnoredPathList.IGNORED_PATH_LIST, IgnoredPathList.IGNORED_PATH_LIST.ID);
	}

	private static class ForeignKeys0 extends AbstractKeys {
		public static final ForeignKey<ScanBadFilesPathListRecord, ScanresultRecord> FK_SCAN_BAD_FILES_PATH_LIST_SCANRESULT_1 = createForeignKey(org.home.jooq.Keys.PK_SCANRESULT, ScanBadFilesPathList.SCAN_BAD_FILES_PATH_LIST, ScanBadFilesPathList.SCAN_BAD_FILES_PATH_LIST.SCAN_ID);
		public static final ForeignKey<ScanBadFilesPathListRecord, BadFilesPathListRecord> FK_SCAN_BAD_FILES_PATH_LIST_BAD_FILES_PATH_LIST_1 = createForeignKey(org.home.jooq.Keys.PK_BAD_FILES_PATH_LIST, ScanBadFilesPathList.SCAN_BAD_FILES_PATH_LIST, ScanBadFilesPathList.SCAN_BAD_FILES_PATH_LIST.FILE_PATH_ID);
		public static final ForeignKey<ScanBookRecord, ScanresultRecord> FK_SCAN_BOOK_SCANRESULT_1 = createForeignKey(org.home.jooq.Keys.PK_SCANRESULT, ScanBook.SCAN_BOOK, ScanBook.SCAN_BOOK.SCAN_ID);
		public static final ForeignKey<ScanBookRecord, BookRecord> FK_SCAN_BOOK_BOOK_1 = createForeignKey(org.home.jooq.Keys.PK_BOOK, ScanBook.SCAN_BOOK, ScanBook.SCAN_BOOK.BOOK_SCAN_ID);
		public static final ForeignKey<ScanEmptyBookRecord, ScanresultRecord> FK_SCAN_EMPTY_BOOK_SCANRESULT_1 = createForeignKey(org.home.jooq.Keys.PK_SCANRESULT, ScanEmptyBook.SCAN_EMPTY_BOOK, ScanEmptyBook.SCAN_EMPTY_BOOK.SCAN_ID);
		public static final ForeignKey<ScanEmptyBookRecord, EmptyBookRecord> FK_SCAN_EMPTY_BOOK_EMPTY_BOOK_1 = createForeignKey(org.home.jooq.Keys.PK_EMPTY_BOOK, ScanEmptyBook.SCAN_EMPTY_BOOK, ScanEmptyBook.SCAN_EMPTY_BOOK.BOOK_SCAN_ID);
		public static final ForeignKey<ScanScannedPathListRecord, ScanresultRecord> FK_SCAN_SCANNED_PATH_LIST_SCANRESULT_1 = createForeignKey(org.home.jooq.Keys.PK_SCANRESULT, ScanScannedPathList.SCAN_SCANNED_PATH_LIST, ScanScannedPathList.SCAN_SCANNED_PATH_LIST.SCAN_ID);
		public static final ForeignKey<ScanScannedPathListRecord, ScannedPathListRecord> FK_SCAN_SCANNED_PATH_LIST_SCANNED_PATH_LIST_1 = createForeignKey(org.home.jooq.Keys.PK_SCANNED_PATH_LIST, ScanScannedPathList.SCAN_SCANNED_PATH_LIST, ScanScannedPathList.SCAN_SCANNED_PATH_LIST.FILE_PATH_ID);
		public static final ForeignKey<ScanUndefinedBookRecord, ScanresultRecord> FK_SCAN_UNDEFINED_BOOK_SCANRESULT_1 = createForeignKey(org.home.jooq.Keys.PK_SCANRESULT, ScanUndefinedBook.SCAN_UNDEFINED_BOOK, ScanUndefinedBook.SCAN_UNDEFINED_BOOK.SCAN_ID);
		public static final ForeignKey<ScanUndefinedBookRecord, UndefinedBookRecord> FK_SCAN_UNDEFINED_BOOK_UNDEFINED_BOOK_1 = createForeignKey(org.home.jooq.Keys.PK_UNDEFINED_BOOK, ScanUndefinedBook.SCAN_UNDEFINED_BOOK, ScanUndefinedBook.SCAN_UNDEFINED_BOOK.BOOK_SCAN_ID);
		public static final ForeignKey<ScanUndefinedPathListRecord, ScanresultRecord> FK_SCAN_UNDEFINED_PATH_LIST_SCANRESULT_1 = createForeignKey(org.home.jooq.Keys.PK_SCANRESULT, ScanUndefinedPathList.SCAN_UNDEFINED_PATH_LIST, ScanUndefinedPathList.SCAN_UNDEFINED_PATH_LIST.SCAN_ID);
		public static final ForeignKey<SessionScanRecord, SessionRecord> FK_SESSION_SCAN_SESSION_1 = createForeignKey(org.home.jooq.Keys.PK_SESSION, SessionScan.SESSION_SCAN, SessionScan.SESSION_SCAN.SESSION_NAME);
		public static final ForeignKey<SessionScanRecord, ScanresultRecord> FK_SESSION_SCAN_SCANRESULT_1 = createForeignKey(org.home.jooq.Keys.PK_SCANRESULT, SessionScan.SESSION_SCAN, SessionScan.SESSION_SCAN.SCAN_ID);
	}
}
