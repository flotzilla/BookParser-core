/**
 * This class is generated by jOOQ
 */
package org.home.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.home.jooq.DefaultSchema;
import org.home.jooq.Keys;
import org.home.jooq.tables.records.ScanresultRecord;
import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Scanresult extends TableImpl<ScanresultRecord> {

	private static final long serialVersionUID = -440210297;

	/**
	 * The reference instance of <code>ScanResult</code>
	 */
	public static final Scanresult SCANRESULT = new Scanresult();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ScanresultRecord> getRecordType() {
		return ScanresultRecord.class;
	}

	/**
	 * The column <code>ScanResult.scan_id</code>.
	 */
	public final TableField<ScanresultRecord, Integer> SCAN_ID = createField("scan_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>ScanResult.scan_time</code>.
	 */
	public final TableField<ScanresultRecord, String> SCAN_TIME = createField("scan_time", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>ScanResult.parse_time</code>.
	 */
	public final TableField<ScanresultRecord, String> PARSE_TIME = createField("parse_time", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>ScanResult.glob_time</code>.
	 */
	public final TableField<ScanresultRecord, String> GLOB_TIME = createField("glob_time", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>ScanResult.pdf_books_count</code>.
	 */
	public final TableField<ScanresultRecord, Integer> PDF_BOOKS_COUNT = createField("pdf_books_count", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>ScanResult.fb2_books_count</code>.
	 */
	public final TableField<ScanresultRecord, Integer> FB2_BOOKS_COUNT = createField("fb2_books_count", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>ScanResult.epub_books_count</code>.
	 */
	public final TableField<ScanresultRecord, Integer> EPUB_BOOKS_COUNT = createField("epub_books_count", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>ScanResult.djvu_books_count</code>.
	 */
	public final TableField<ScanresultRecord, Integer> DJVU_BOOKS_COUNT = createField("djvu_books_count", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>ScanResult.txt_books_count</code>.
	 */
	public final TableField<ScanresultRecord, Integer> TXT_BOOKS_COUNT = createField("txt_books_count", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>ScanResult.doc_books_count</code>.
	 */
	public final TableField<ScanresultRecord, Integer> DOC_BOOKS_COUNT = createField("doc_books_count", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>ScanResult.cbr_books_count</code>.
	 */
	public final TableField<ScanresultRecord, Integer> CBR_BOOKS_COUNT = createField("cbr_books_count", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>ScanResult.book_found_count</code>.
	 */
	public final TableField<ScanresultRecord, Integer> BOOK_FOUND_COUNT = createField("book_found_count", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>ScanResult.empty_book_count</code>.
	 */
	public final TableField<ScanresultRecord, Integer> EMPTY_BOOK_COUNT = createField("empty_book_count", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>ScanResult.undefined_book_count</code>.
	 */
	public final TableField<ScanresultRecord, Integer> UNDEFINED_BOOK_COUNT = createField("undefined_book_count", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>ScanResult.scanned_path_count</code>.
	 */
	public final TableField<ScanresultRecord, Integer> SCANNED_PATH_COUNT = createField("scanned_path_count", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>ScanResult.bad_files_count</code>.
	 */
	public final TableField<ScanresultRecord, Integer> BAD_FILES_COUNT = createField("bad_files_count", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>ScanResult.ignored_path_count</code>.
	 */
	public final TableField<ScanresultRecord, Integer> IGNORED_PATH_COUNT = createField("ignored_path_count", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * Create a <code>ScanResult</code> table reference
	 */
	public Scanresult() {
		this("ScanResult", null);
	}

	/**
	 * Create an aliased <code>ScanResult</code> table reference
	 */
	public Scanresult(String alias) {
		this(alias, SCANRESULT);
	}

	private Scanresult(String alias, Table<ScanresultRecord> aliased) {
		this(alias, aliased, null);
	}

	private Scanresult(String alias, Table<ScanresultRecord> aliased, Field<?>[] parameters) {
		super(alias, DefaultSchema.DEFAULT_SCHEMA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<ScanresultRecord> getPrimaryKey() {
		return Keys.PK_SCANRESULT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<ScanresultRecord>> getKeys() {
		return Arrays.<UniqueKey<ScanresultRecord>>asList(Keys.PK_SCANRESULT);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Scanresult as(String alias) {
		return new Scanresult(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Scanresult rename(String name) {
		return new Scanresult(name, null);
	}
}
